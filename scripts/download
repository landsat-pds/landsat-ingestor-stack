#!/bin/bash
source /etc/profile
set -eou pipefail
 
 
function usage() {
  echo ""
  echo "Download a Landsat scene from USGS."
  echo ""
  echo "Usage: ./download [entity id]"
  echo ""
}


entityid=${1:-}


if [[ -z $entityid ]]; then
  usage;
  exit 1;
fi


function onerror() {
  # Changes to the USGS API in July/August 2020 requires receiving an ephemeral
  # url. The filename/product id is hidden in the response header. Since the
  # product id is not as readily available, parse the path/row and date from the
  # entity id, and delete the file using wildcards.
  pathrow=${entityid:3:6}
  year_doy=${entityid:9:7}
  date_str=$(python -c "from datetime import datetime; print(datetime.strptime('$year_doy', '%Y%j').strftime('%Y%m%d'))")
  rm -rf /mnt/LC08_*_${pathrow}_${date_str}_*.tar.gz

  # The behavior of authentication against the USGS API appears to have changed
  # since the June 2020 maintenance. Attempt to login again
  rm -f $HOME/.usgs
  sleep $[ $RANDOM % 10 + 10]s
  # Login only if the file does not exist.
  if [ ! -f "$HOME/.usgs" ]; then
    touch $HOME/.usgs
    usgs login
  fi
  exit 1
}
trap onerror EXIT
 
function download_landsat() {
  local entityid=$1

  url=$(usgs download-url --node EE LANDSAT_8_C1 $entityid --product STANDARD | jq -r ".data[0].url")

  echo "Downloading $entityid from $url"
  t0=$(date +%s)
  cd /mnt
  output=$(curl --silent --fail --location "$url" --remote-header-name -O)
  cd -
  t1=$(date +%s)
  echo "Took $(($t1 - $t0)) seconds to download $entityid"

  productid=$(echo $output | ack-grep '(?P<productid>L[A-Z0-9_]*).tar.gz' --output $+{productid})
  dstpath=/mnt/${productid}.tar.gz

  # Drop archive into a different queue directory
  # as a workaround of some internal issues
  acquisition_date=$(echo $productid | cut -d '_' -f4)
  acquisition_year=${acquisition_date:0:4}

  if [ "$acquisition_year" -gt 2017 ]; then
    echo "Copying $entityid to s3://landsat-pds/tarq/"
    aws s3 cp $dstpath s3://landsat-pds/tarq/ --acl public-read
  else
    echo "Copying $entityid to s3://landsat-pds/tarq_archive/"
    aws s3 cp $dstpath s3://landsat-pds/tarq_archive/ --acl public-read
  fi

  rm -f $dstpath
}
 
download_landsat $entityid
 
trap - EXIT
exit 0